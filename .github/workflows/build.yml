name: Build and Release

on:
  push:
    #    branches:
    #      - refresh_replace
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
#         target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.78.0
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross

      - name: Build release
        run: |
          cargo build --release --target=${{ matrix.target }}
          strip target/${{ matrix.target }}/release/my-project

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dbt-${{ matrix.target }}-${{ github.ref_name }}
          path: target/${{ matrix.target }}/release/
